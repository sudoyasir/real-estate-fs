{"version":3,"file":"FormProvider.js","sources":["../../src/FormProvider/FormProvider.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport { useForm } from '../use-form';\nimport { UseFormReturnType, UseForm, _TransformValues } from '../types';\n\nexport interface FormProviderProps<Form> {\n  form: Form;\n  children: React.ReactNode;\n}\n\nexport function createFormContext<\n  Values,\n  TransformValues extends _TransformValues<Values> = (values: Values) => Values,\n>() {\n  type Form = UseFormReturnType<Values, TransformValues>;\n\n  const FormContext = createContext<Form | null>(null);\n\n  function FormProvider({ form, children }: FormProviderProps<Form>) {\n    return <FormContext.Provider value={form}>{children}</FormContext.Provider>;\n  }\n\n  function useFormContext() {\n    const ctx = useContext(FormContext);\n    if (!ctx) {\n      throw new Error('useFormContext was called outside of FormProvider context');\n    }\n\n    return ctx;\n  }\n\n  return [FormProvider, useFormContext, useForm] as [\n    React.FC<FormProviderProps<Form>>,\n    () => Form,\n    UseForm<Values, TransformValues>,\n  ];\n}\n"],"names":["createContext","React","useContext","useForm"],"mappings":";;;;;;;;;;;;AAEO,SAAS,iBAAiB,GAAG;AACpC,EAAE,MAAM,WAAW,GAAGA,mBAAa,CAAC,IAAI,CAAC,CAAC;AAC1C,EAAE,SAAS,YAAY,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AAC5C,IAAI,uBAAuBC,cAAK,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC;AAChG,GAAG;AACH,EAAE,SAAS,cAAc,GAAG;AAC5B,IAAI,MAAM,GAAG,GAAGC,gBAAU,CAAC,WAAW,CAAC,CAAC;AACxC,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,MAAM,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;AACnF,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,GAAG;AACH,EAAE,OAAO,CAAC,YAAY,EAAE,cAAc,EAAEC,eAAO,CAAC,CAAC;AACjD;;"}