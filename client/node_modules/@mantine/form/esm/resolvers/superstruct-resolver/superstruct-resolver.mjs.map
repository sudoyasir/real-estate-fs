{"version":3,"file":"superstruct-resolver.mjs","sources":["../../../src/resolvers/superstruct-resolver/superstruct-resolver.ts"],"sourcesContent":["import type { FormErrors } from '../../types';\n\ntype StructFailure = {\n  value: any;\n  key: any;\n  type: string;\n  refinement: string | undefined;\n  message: string;\n  explanation?: string;\n  branch: Array<any>;\n  path: Array<any>;\n};\n\ntype StructValidationError = {\n  failures: () => Array<StructFailure>;\n};\n\nexport function superstructResolver(schema: any) {\n  function structValidation(values: Record<string, any>): FormErrors {\n    const formErrors: FormErrors = {};\n\n    const [err]: [StructValidationError | null, unknown] = schema.validate(values);\n    if (!err) {\n      return formErrors;\n    }\n\n    err.failures().forEach((fieldFailure) => {\n      const fieldName = fieldFailure.path.join(' ');\n      formErrors[fieldFailure.path.join('.')] = `${fieldName}: ${fieldFailure.message}`;\n    });\n\n    return formErrors;\n  }\n\n  return structValidation;\n}\n"],"names":[],"mappings":";AAAO,SAAS,mBAAmB,CAAC,MAAM,EAAE;AAC5C,EAAE,SAAS,gBAAgB,CAAC,MAAM,EAAE;AACpC,IAAI,MAAM,UAAU,GAAG,EAAE,CAAC;AAC1B,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC1C,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,MAAM,OAAO,UAAU,CAAC;AACxB,KAAK;AACL,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,YAAY,KAAK;AAC7C,MAAM,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpD,MAAM,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;AACxF,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,UAAU,CAAC;AACtB,GAAG;AACH,EAAE,OAAO,gBAAgB,CAAC;AAC1B;;"}