{"version":3,"file":"get-variables.js","sources":["../../../../../src/components/AppShell/AppShellMediaStyles/get-variables/get-variables.ts"],"sourcesContent":["import { MantineTheme, em, keys, getSortedBreakpoints } from '../../../../core';\nimport type { AppShellProps } from '../../AppShell';\nimport { assignAsideVariables } from '../assign-aside-variables/assign-aside-variables';\nimport { assignFooterVariables } from '../assign-footer-variables/assign-footer-variables';\nimport { assignHeaderVariables } from '../assign-header-variables/assign-header-variables';\nimport { assignNavbarVariables } from '../assign-navbar-variables/assign-navbar-variables';\nimport { assignPaddingVariables } from '../assign-padding-variables/assign-padding-variables';\n\nexport type CSSVariables = Record<`--${string}`, string | undefined>;\nexport type MediaQueryVariables = Record<string, Record<`--${string}`, string | undefined>>;\n\ninterface GetVariablesInput {\n  navbar: AppShellProps['navbar'] | undefined;\n  header: AppShellProps['header'] | undefined;\n  footer: AppShellProps['footer'] | undefined;\n  aside: AppShellProps['aside'] | undefined;\n  padding: AppShellProps['padding'] | undefined;\n  theme: MantineTheme;\n}\n\nexport function getVariables({ navbar, header, footer, aside, padding, theme }: GetVariablesInput) {\n  const minMediaStyles: MediaQueryVariables = {};\n  const maxMediaStyles: MediaQueryVariables = {};\n  const baseStyles: CSSVariables = {};\n\n  assignNavbarVariables({\n    baseStyles,\n    minMediaStyles,\n    maxMediaStyles,\n    navbar,\n    theme,\n  });\n\n  assignAsideVariables({\n    baseStyles,\n    minMediaStyles,\n    maxMediaStyles,\n    aside,\n    theme,\n  });\n\n  assignHeaderVariables({ baseStyles, minMediaStyles, header });\n  assignFooterVariables({ baseStyles, minMediaStyles, footer });\n  assignPaddingVariables({ baseStyles, minMediaStyles, padding });\n\n  const minMedia = getSortedBreakpoints(keys(minMediaStyles), theme).map((breakpoint) => ({\n    query: `(min-width: ${em(breakpoint.px)})`,\n    styles: minMediaStyles[breakpoint.value],\n  }));\n\n  const maxMedia = getSortedBreakpoints(keys(maxMediaStyles), theme).map((breakpoint) => ({\n    query: `(max-width: ${em(breakpoint.px)})`,\n    styles: maxMediaStyles[breakpoint.value],\n  }));\n\n  const media = [...minMedia, ...maxMedia];\n\n  return { baseStyles, media };\n}\n"],"names":["assignNavbarVariables","assignAsideVariables","assignHeaderVariables","assignFooterVariables","assignPaddingVariables","getSortedBreakpoints","keys","em"],"mappings":";;;;;;;;;;;;;;AAMO,SAAS,YAAY,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;AAChF,EAAE,MAAM,cAAc,GAAG,EAAE,CAAC;AAC5B,EAAE,MAAM,cAAc,GAAG,EAAE,CAAC;AAC5B,EAAE,MAAM,UAAU,GAAG,EAAE,CAAC;AACxB,EAAEA,2CAAqB,CAAC;AACxB,IAAI,UAAU;AACd,IAAI,cAAc;AAClB,IAAI,cAAc;AAClB,IAAI,MAAM;AACV,IAAI,KAAK;AACT,GAAG,CAAC,CAAC;AACL,EAAEC,yCAAoB,CAAC;AACvB,IAAI,UAAU;AACd,IAAI,cAAc;AAClB,IAAI,cAAc;AAClB,IAAI,KAAK;AACT,IAAI,KAAK;AACT,GAAG,CAAC,CAAC;AACL,EAAEC,2CAAqB,CAAC,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,EAAE,CAAC,CAAC;AAChE,EAAEC,2CAAqB,CAAC,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,EAAE,CAAC,CAAC;AAChE,EAAEC,6CAAsB,CAAC,EAAE,UAAU,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,CAAC;AAClE,EAAE,MAAM,QAAQ,GAAGC,yCAAoB,CAACC,SAAI,CAAC,cAAc,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,MAAM;AAC1F,IAAI,KAAK,EAAE,CAAC,YAAY,EAAEC,MAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,MAAM,EAAE,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC;AAC5C,GAAG,CAAC,CAAC,CAAC;AACN,EAAE,MAAM,QAAQ,GAAGF,yCAAoB,CAACC,SAAI,CAAC,cAAc,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,MAAM;AAC1F,IAAI,KAAK,EAAE,CAAC,YAAY,EAAEC,MAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,MAAM,EAAE,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC;AAC5C,GAAG,CAAC,CAAC,CAAC;AACN,EAAE,MAAM,KAAK,GAAG,CAAC,GAAG,QAAQ,EAAE,GAAG,QAAQ,CAAC,CAAC;AAC3C,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;AAC/B;;"}