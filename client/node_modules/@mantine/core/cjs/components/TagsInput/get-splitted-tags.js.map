{"version":3,"file":"get-splitted-tags.js","sources":["../../../src/components/TagsInput/get-splitted-tags.ts"],"sourcesContent":["function splitTags(splitChars: string[] | undefined, value: string) {\n  if (!splitChars) return [value];\n\n  return value\n    .split(new RegExp(`[${splitChars.join('')}]`))\n    .map((tag) => tag.trim())\n    .filter((tag) => tag !== '');\n}\n\ninterface GetSplittedTagsInput {\n  splitChars: string[] | undefined;\n  allowDuplicates: boolean | undefined;\n  maxTags: number | undefined;\n  value: string;\n  currentTags: string[];\n}\n\nexport function getSplittedTags({\n  splitChars,\n  allowDuplicates,\n  maxTags,\n  value,\n  currentTags,\n}: GetSplittedTagsInput) {\n  const splitted = splitTags(splitChars, value);\n  const merged = allowDuplicates\n    ? [...currentTags, ...splitted]\n    : [...new Set([...currentTags, ...splitted])];\n\n  return maxTags ? merged.slice(0, maxTags) : merged;\n}\n"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE;AACtC,EAAE,IAAI,CAAC,UAAU;AACjB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;AACnB,EAAE,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC;AAClH,CAAC;AACM,SAAS,eAAe,CAAC;AAChC,EAAE,UAAU;AACZ,EAAE,eAAe;AACjB,EAAE,OAAO;AACT,EAAE,KAAK;AACP,EAAE,WAAW;AACb,CAAC,EAAE;AACH,EAAE,MAAM,QAAQ,GAAG,SAAS,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AAChD,EAAE,MAAM,MAAM,GAAG,eAAe,GAAG,CAAC,GAAG,WAAW,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,mBAAmB,IAAI,GAAG,CAAC,CAAC,GAAG,WAAW,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC/H,EAAE,OAAO,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,MAAM,CAAC;AACrD;;"}