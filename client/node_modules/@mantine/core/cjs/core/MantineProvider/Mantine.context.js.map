{"version":3,"file":"Mantine.context.js","sources":["../../../src/core/MantineProvider/Mantine.context.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\nimport type { MantineTheme, MantineColorScheme } from './theme.types';\nimport type { MantineColorSchemeManager } from './color-scheme-managers';\nimport { ConvertCSSVariablesInput } from './convert-css-variables';\n\ninterface MantineContextValue {\n  colorScheme: MantineColorScheme;\n  setColorScheme(colorScheme: MantineColorScheme): void;\n  clearColorScheme(): void;\n  colorSchemeManager: MantineColorSchemeManager;\n  getRootElement(): HTMLElement | undefined;\n  classNamesPrefix: string;\n  getStyleNonce?(): string | undefined;\n  cssVariablesResolver?(theme: MantineTheme): ConvertCSSVariablesInput;\n  cssVariablesSelector: string;\n}\n\nexport const MantineContext = createContext<MantineContextValue | null>(null);\n\nexport function useMantineContext() {\n  const ctx = useContext(MantineContext);\n\n  if (!ctx) {\n    throw new Error('[@mantine/core] MantineProvider was not found in tree');\n  }\n\n  return ctx;\n}\n\nexport function useMantineCssVariablesResolver() {\n  return useMantineContext().cssVariablesResolver;\n}\n\nexport function useMantineClassNamesPrefix() {\n  return useMantineContext().classNamesPrefix;\n}\n\nexport function useMantineStyleNonce() {\n  return useMantineContext().getStyleNonce;\n}\n"],"names":["createContext","useContext"],"mappings":";;;;;;;AACY,MAAC,cAAc,GAAGA,mBAAa,CAAC,IAAI,EAAE;AAC3C,SAAS,iBAAiB,GAAG;AACpC,EAAE,MAAM,GAAG,GAAGC,gBAAU,CAAC,cAAc,CAAC,CAAC;AACzC,EAAE,IAAI,CAAC,GAAG,EAAE;AACZ,IAAI,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;AAC7E,GAAG;AACH,EAAE,OAAO,GAAG,CAAC;AACb,CAAC;AACM,SAAS,8BAA8B,GAAG;AACjD,EAAE,OAAO,iBAAiB,EAAE,CAAC,oBAAoB,CAAC;AAClD,CAAC;AACM,SAAS,0BAA0B,GAAG;AAC7C,EAAE,OAAO,iBAAiB,EAAE,CAAC,gBAAgB,CAAC;AAC9C,CAAC;AACM,SAAS,oBAAoB,GAAG;AACvC,EAAE,OAAO,iBAAiB,EAAE,CAAC,aAAa,CAAC;AAC3C;;;;;;"}