{"version":3,"file":"ScrollArea.context.mjs","sources":["../../../src/components/ScrollArea/ScrollArea.context.ts"],"sourcesContent":["import { createSafeContext } from '../../core';\n\nexport interface ScrollAreaContextValue {\n  type: 'auto' | 'always' | 'scroll' | 'hover' | 'never';\n  scrollHideDelay: number;\n  scrollArea: HTMLDivElement | null;\n  viewport: HTMLDivElement | null;\n  onViewportChange(viewport: HTMLDivElement | null): void;\n  content: HTMLDivElement | null;\n  onContentChange(content: HTMLDivElement): void;\n  scrollbarX: HTMLDivElement | null;\n  onScrollbarXChange(scrollbar: HTMLDivElement | null): void;\n  scrollbarXEnabled: boolean;\n  onScrollbarXEnabledChange(rendered: boolean): void;\n  scrollbarY: HTMLDivElement | null;\n  onScrollbarYChange(scrollbar: HTMLDivElement | null): void;\n  scrollbarYEnabled: boolean;\n  onScrollbarYEnabledChange(rendered: boolean): void;\n  onCornerWidthChange(width: number): void;\n  onCornerHeightChange(height: number): void;\n}\n\nexport const [ScrollAreaProvider, useScrollAreaContext] = createSafeContext<ScrollAreaContextValue>(\n  'ScrollArea.Root component was not found in tree'\n);\n"],"names":[],"mappings":";;;AACY,MAAC,CAAC,kBAAkB,EAAE,oBAAoB,CAAC,GAAG,iBAAiB;AAC3E,EAAE,iDAAiD;AACnD;;"}