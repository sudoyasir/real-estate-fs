{"version":3,"file":"filter-picked-tags.mjs","sources":["../../../src/components/TagsInput/filter-picked-tags.ts"],"sourcesContent":["import { ComboboxParsedItem, isOptionsGroup } from '../Combobox';\n\ninterface FilterPickedTagsInput {\n  data: ComboboxParsedItem[];\n  value: string[];\n}\n\nexport function filterPickedTags({ data, value }: FilterPickedTagsInput) {\n  const normalizedValue = value.map((item) => item.trim().toLowerCase());\n\n  const filtered = data.reduce<ComboboxParsedItem[]>((acc, item) => {\n    if (isOptionsGroup(item)) {\n      acc.push({\n        group: item.group,\n        items: item.items.filter(\n          (option) => normalizedValue.indexOf(option.label.toLowerCase().trim()) === -1\n        ),\n      });\n    } else if (normalizedValue.indexOf(item.label.toLowerCase().trim()) === -1) {\n      acc.push(item);\n    }\n\n    return acc;\n  }, []);\n\n  return filtered;\n}\n"],"names":[],"mappings":";;;AACO,SAAS,gBAAgB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAClD,EAAE,MAAM,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;AACzE,EAAE,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK;AAC9C,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC,EAAE;AAC9B,MAAM,GAAG,CAAC,IAAI,CAAC;AACf,QAAQ,KAAK,EAAE,IAAI,CAAC,KAAK;AACzB,QAAQ,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;AAChC,UAAU,CAAC,MAAM,KAAK,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC;AACvF,SAAS;AACT,OAAO,CAAC,CAAC;AACT,KAAK,MAAM,IAAI,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;AAChF,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrB,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,GAAG,EAAE,EAAE,CAAC,CAAC;AACT,EAAE,OAAO,QAAQ,CAAC;AAClB;;"}