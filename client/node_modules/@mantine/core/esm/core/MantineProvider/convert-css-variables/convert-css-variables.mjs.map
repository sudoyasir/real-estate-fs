{"version":3,"file":"convert-css-variables.mjs","sources":["../../../../src/core/MantineProvider/convert-css-variables/convert-css-variables.ts"],"sourcesContent":["import { cssVariablesObjectToString, CSSVariables } from './css-variables-object-to-string';\nimport { wrapWithSelector } from './wrap-with-selector';\n\nexport interface ConvertCSSVariablesInput {\n  /** Shared CSS variables that should be accessible independent from color scheme */\n  variables: CSSVariables;\n\n  /** CSS variables available only in dark color scheme */\n  dark: CSSVariables;\n\n  /** CSS variables available only in light color scheme */\n  light: CSSVariables;\n}\n\nexport function convertCssVariables(input: ConvertCSSVariablesInput, selector: string) {\n  const sharedVariables = cssVariablesObjectToString(input.variables);\n  const shared = sharedVariables ? wrapWithSelector(selector, sharedVariables) : '';\n\n  const dark = cssVariablesObjectToString(input.dark);\n  const darkForced = dark\n    ? wrapWithSelector(`${selector}[data-mantine-color-scheme=\"dark\"]`, dark)\n    : '';\n\n  const light = cssVariablesObjectToString(input.light);\n  const lightForced = light\n    ? wrapWithSelector(`${selector}[data-mantine-color-scheme=\"light\"]`, light)\n    : '';\n\n  return `${shared}${darkForced}${lightForced}`;\n}\n"],"names":[],"mappings":";;;;AAEO,SAAS,mBAAmB,CAAC,KAAK,EAAE,QAAQ,EAAE;AACrD,EAAE,MAAM,eAAe,GAAG,0BAA0B,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACtE,EAAE,MAAM,MAAM,GAAG,eAAe,GAAG,gBAAgB,CAAC,QAAQ,EAAE,eAAe,CAAC,GAAG,EAAE,CAAC;AACpF,EAAE,MAAM,IAAI,GAAG,0BAA0B,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACtD,EAAE,MAAM,UAAU,GAAG,IAAI,GAAG,gBAAgB,CAAC,CAAC,EAAE,QAAQ,CAAC,kCAAkC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACzG,EAAE,MAAM,KAAK,GAAG,0BAA0B,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACxD,EAAE,MAAM,WAAW,GAAG,KAAK,GAAG,gBAAgB,CAAC,CAAC,EAAE,QAAQ,CAAC,mCAAmC,CAAC,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC;AAC7G,EAAE,OAAO,CAAC,EAAE,MAAM,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;AAChD;;"}