/// <reference types="react" />
import { BoxProps, StylesApiProps } from '../../core';
import { __BaseInputProps } from './Input';
interface BaseProps extends __BaseInputProps, BoxProps, StylesApiProps<{
    props: any;
    stylesNames: string;
}> {
    __staticSelector?: string;
    __stylesApiProps?: Record<string, any>;
    id?: string;
}
export declare function useInputProps<T extends BaseProps, U extends Partial<T>>(component: string, defaultProps: U, _props: T): Omit<T & { [Key in Extract<keyof T, never>]-?: {}[Key] | NonNullable<T[Key]>; }, "label" | "style" | "size" | "styles" | "className" | "id" | "vars" | "variant" | "unstyled" | "classNames" | "required" | "error" | "description" | "__staticSelector" | "__stylesApiProps" | "withAsterisk" | "labelProps" | "descriptionProps" | "errorProps" | "inputContainer" | "inputWrapperOrder" | "wrapperProps"> & {
    classNames: Partial<Record<string, string>> | ((theme: import("../../core").MantineTheme, props: any, ctx: unknown) => Partial<Record<string, string>>) | undefined;
    styles: Partial<Record<string, import("react").CSSProperties>> | ((theme: import("../../core").MantineTheme, props: any, ctx: unknown) => Partial<Record<string, import("react").CSSProperties>>) | undefined;
    unstyled: boolean | undefined;
    wrapperProps: {
        label: import("react").ReactNode;
        description: import("react").ReactNode;
        error: import("react").ReactNode;
        required: boolean | undefined;
        classNames: Partial<Record<string, string>> | ((theme: import("../../core").MantineTheme, props: any, ctx: unknown) => Partial<Record<string, string>>) | undefined;
        className: string | undefined;
        __staticSelector: string | undefined;
        __stylesApiProps: Record<string, any>;
        errorProps: Record<string, any> | undefined;
        labelProps: Record<string, any> | undefined;
        descriptionProps: Record<string, any> | undefined;
        unstyled: boolean | undefined;
        styles: Partial<Record<string, import("react").CSSProperties>> | ((theme: import("../../core").MantineTheme, props: any, ctx: unknown) => Partial<Record<string, import("react").CSSProperties>>) | undefined;
        size: (string & {}) | import("../../core").MantineSize | undefined;
        style: import("../../core").MantineStyleProp;
        inputContainer: ((children: import("react").ReactNode) => import("react").ReactNode) | undefined;
        inputWrapperOrder: ("input" | "label" | "error" | "description")[] | undefined;
        withAsterisk: boolean | undefined;
        variant: string | undefined;
        id: string | undefined;
    } & BoxProps;
    inputProps: {
        required: boolean | undefined;
        classNames: Partial<Record<string, string>> | ((theme: import("../../core").MantineTheme, props: any, ctx: unknown) => Partial<Record<string, string>>) | undefined;
        styles: Partial<Record<string, import("react").CSSProperties>> | ((theme: import("../../core").MantineTheme, props: any, ctx: unknown) => Partial<Record<string, import("react").CSSProperties>>) | undefined;
        unstyled: boolean | undefined;
        size: (string & {}) | import("../../core").MantineSize | undefined;
        __staticSelector: string | undefined;
        __stylesApiProps: Record<string, any>;
        error: import("react").ReactNode;
        variant: string | undefined;
        id: string | undefined;
    };
};
export {};
